/**
 * Generated by smali2java 1.0.0.558
 * Copyright (C) 2013 Hensence.com
 */

package com.zhizun.zhizunwifi.view;

import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.RectF;
import android.text.format.Formatter;
import android.util.AttributeSet;
import android.view.View;
import android.widget.TextView;

import com.zhizun.zhizunwifi.R;

public class SpeedProgressBar extends View {
    private Paint a;
    private int b;
    private float c;
    private int d;
    private int e;
    private int f;
    private float g;
    private TextView m;
    private TextView n;
    private SpeedTestPoint o;
    private Context q;
    private int r;
    private boolean h = false;
    private float i = 0.0f;
    private boolean j = true;
    private boolean k = false;
    private boolean l = false;
    float p = 0x0;

    public SpeedProgressBar(Context p1) {
//        this(p1);
        super(p1);
    }

    public SpeedProgressBar(Context p1, AttributeSet p2) {
        this(p1, p2, 0x0);
        q = p1;
    }

    public SpeedProgressBar(Context p1, AttributeSet p2, int p3) {
        super(p1, p2, p3);
        q = p1;
        a = new Paint();
        TypedArray mTypedArray = p1.obtainStyledAttributes(p2,R.styleable.RoundProgressBar);
//        R.styleable.SpeedProgressBar = p1.obtainStyledAttributes(p2, R.styleable.SpeedProgressBar);
        b = mTypedArray.getColor(0, 0x0);
        d = mTypedArray.getInteger(0, 0x10e);
        f = mTypedArray.getInt(0, 0x0);
        r = (int)(q.getResources().getDisplayMetrics().density * 0.0f);
        c = (float)(int)(q.getResources().getDisplayMetrics().density * 0.0f);
        mTypedArray.recycle();
    }

    protected void onDraw(Canvas p1) {
        super.onDraw(p1);
//        getWidth() = getWidth() / 0x2;
        a.setColor(getResources().getColor(R.color.test_speed_color_progress));
        a.setStyle(Paint.Style.STROKE);
        a.setStrokeWidth(c);
        a.setAntiAlias(true);
        RectF localRectF1 = new RectF((float)(getWidth() - r), (float)(getWidth() - r), (float)(r + getWidth()), (float)(getWidth() + r));
        p1.drawArc(localRectF1, 0.0f, -(0.0f - g), false, a);
        if(o != null) {
            o.a(g);
        }
        if((m != null) && ((p % 0x5) == 0) || (l)) {
//            g >= 0.0f ? a : (g >= 0.0f)) {
//                m.setText(localStringBuilder2.append(Formatter.formatShortFileSize(q, (long)(0.0f + (((g - 0.0f) * 0.0f) / 0.0f)))).append("/s").toString());
//                p = 0x0;
//            }
        }
        if(!l) {
            if(h) {
                g = (g + 0.0f);
                if((g > i) || (g >= 0.0f)) {
                    h = false;
                }
            } else {
                g = (g - 0.0f);
//                (g < 0x0)) {
//                    g = 0.0f;
//                }
            }
        }
        if(k) {
            if((!h) && (i <= g)) {
                g = i;
                l = true;
                j = true;
            } else if((i - g) <= 0x0) {
                g = i;
                l = true;
                j = true;
            }
        }
        if(!l) {
            p = (p + 0x1);
        }
        if((l) && (n != null)) {
            n.setText("重新测速");
            n.setBackgroundResource(R.drawable.speed_test_btn_stop);
        }
        invalidate();
    }

    public final synchronized void a(int p1, TextView p2, SpeedTestPoint p3, boolean p4) {
        m = p2;
        o = p3;
        k = p4;
        if(p1 < 0) {
            throw new IllegalArgumentException("progress not less than 0");
        }
        if(p1 > d) {
            p1 = d;
        }
        if(p1 <= d) {
            e = p1;
            i = (float)p1;
            if(i > g) {
                h = true;
            } else {
                h = false;
            }
            if(j) {
                h = true;
            }
            if(!p4) {
                l = false;
            }
            j = false;
        }
    }

    public final void a(TextView p1) {
        n = p1;
    }
}
