package com.zhizun.zhizunwifi.activity;

import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.Bundle;
import android.util.Log;
import android.view.KeyEvent;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.zhizun.zhizunwifi.MainApplication;
import com.zhizun.zhizunwifi.R;
import com.zhizun.zhizunwifi.bean.JsonWifi;
import com.zhizun.zhizunwifi.bean.WiFiDetailEntity;
import com.zhizun.zhizunwifi.dialog.PasswordConnectDialog;
import com.zhizun.zhizunwifi.fragment.ConnectFragment2;
import com.zhizun.zhizunwifi.utils.RxBus;
import com.zhizun.zhizunwifi.utils.WifiUtils;

import net.duohuo.dhroid.ioc.annotation.InjectView;

import java.util.ArrayList;
import java.util.List;

import rx.Subscription;
import rx.android.schedulers.AndroidSchedulers;
import rx.functions.Action1;
import rx.schedulers.Schedulers;
import rx.subscriptions.CompositeSubscription;

public class WiFiDetailsActivity extends BaseActivity{
	private TextView headerTitle;
	private TextView wifi_detail_name;//wifi名称
	private TextView wifi_detail_intensity;//信号强度
	private TextView wifi_detail_encryption;//加密方式
	private TextView wifi_detail_location;//wifi位置
	private RelativeLayout wifi_details_paw;//取消密码分享
	private WiFiDetailEntity wiFiDetailEntity;
	private ImageView headerLeft;
	private Button wifi_detail_forgotpassword;
	private Button wifi_detail_connect;
	private WifiUtils wifiUtils;
	private PasswordConnectDialog passwordConnectDialog;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.wifi_details_main);

		wifiUtils = new WifiUtils(this);

		Intent intent = this.getIntent();
		wiFiDetailEntity = (WiFiDetailEntity)intent.getSerializableExtra("WiFiDetail");

		initView();
		setView();

	}

	private void initView() {
		headerTitle = (TextView)findViewById(R.id.headerTitle);
		headerTitle.setText("详情");

		headerLeft = (ImageView)findViewById(R.id.headerLeft);
		headerLeft.setOnClickListener(onClickListener);

		wifi_detail_name = (TextView)findViewById(R.id.wifi_detail_name);
		wifi_detail_intensity = (TextView)findViewById(R.id.wifi_detail_intensity);
		wifi_detail_encryption = (TextView)findViewById(R.id.wifi_detail_encryption);
		wifi_detail_location = (TextView)findViewById(R.id.wifi_detail_location);
		wifi_details_paw = (RelativeLayout)findViewById(R.id.wifi_details_paw);
		wifi_details_paw.setOnClickListener(onClickListener);
		wifi_detail_forgotpassword = (Button)findViewById(R.id.wifi_detail_forgotpassword);
		wifi_detail_forgotpassword.setOnClickListener(onClickListener);
		wifi_detail_connect = (Button)findViewById(R.id.wifi_detail_connect);
		wifi_detail_connect.setOnClickListener(onClickListener);
	}

	private void setView(){
		wifi_detail_name.setText(wiFiDetailEntity.getWifiName());


		int i = 200 - (wiFiDetailEntity.getWifiIntensity() * 2);
		if(i > 100){
			i = 100;
		}
		wifi_detail_intensity.setText((i) + "%");

		if (wiFiDetailEntity.getWifiEncryption())
		    wifi_detail_encryption.setText("无加密");
		else
			wifi_detail_encryption.setText("WPA/WPA2");

		wifi_detail_location.setText(wiFiDetailEntity.getWifiLocation());

		if (wiFiDetailEntity.getWifiType() == 0){
			wifi_detail_forgotpassword.setVisibility(View.VISIBLE);
		}else {
			wifi_detail_forgotpassword.setVisibility(View.GONE);
		}

	}


	private View.OnClickListener onClickListener = new View.OnClickListener() {
		@Override
		public void onClick(View view) {
			switch (view.getId()) {
				case R.id.wifi_details_paw:
					//取消WiFi分享

					break;
				case R.id.headerLeft:
					finish();
					break;
				case R.id.wifi_detail_forgotpassword:
					//忘记密码
					wifiUtils.removeNetwork(wifiUtils.IsConfiguration(wiFiDetailEntity.getWifiName()));
					finish();
					break;
				case R.id.wifi_detail_connect:
					//连接wifi
					if (wiFiDetailEntity.getWifiType() == 0){
						RxBus.getInstance().post(wiFiDetailEntity);
						finish();
					}else {
						if(!WiFiDetailsActivity.this.isFinishing())
						{
							showPasswordConnectDialog(wiFiDetailEntity.isPj());
						}

					}
					break;
			}
		}
	};

	private void showPasswordConnectDialog(final boolean isBj) {
		if(passwordConnectDialog != null){
			passwordConnectDialog.dismiss();
			passwordConnectDialog = null;
		}
		passwordConnectDialog = new PasswordConnectDialog(this, null,isBj).builder()
				.setTitle(wiFiDetailEntity.getWifiName())
				.setAlertText(null)
				.setPositiveButton("连接", new View.OnClickListener() {
					@Override
					public void onClick(View v) {
						if (isBj){

							RxBus.getInstance().post(wiFiDetailEntity);
						}else {
							wiFiDetailEntity.setWifi_psw(passwordConnectDialog.getPassword());
							RxBus.getInstance().post(wiFiDetailEntity);
						}
					}
				})
				.setNegativeButton("取消", new View.OnClickListener() {
					@Override
					public void onClick(View arg0) {
						passwordConnectDialog.dismiss();
					}
				});
		passwordConnectDialog.show();
	}

	@Override
	protected void onDestroy() {
		super.onDestroy();
	}
}
