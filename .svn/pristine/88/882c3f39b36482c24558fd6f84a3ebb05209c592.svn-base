package com.zhizun.zhizunwifi.utils;


import android.util.Log;

import org.json.JSONObject;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;

/**
 * Created by wbb on 2016/4/6.
 */
public class JmTools {

    public final static String DKAETYA = "@#-*￥cxmx^&+#@*";

    /**
     * 输入加密 T
     * @param str
     * @return
     */
    public static String DKAETYA16(String str){

        String a=str.substring(0, 16);

        return a;
    }

    /**
     * json 解密
     * @param object
     * @return
     */
    public static String DecryptKey(JSONObject object){

        String result = object.optString("result");

        String t = object.optString("T");

        String keyString= Security.md5(t + DKAETYA);

        String key=DKAETYA16(keyString);

        //解密
        String data= Security.decrypt(key, result);

        return data;
    }

    /**
     * 字符串 解密
     * @param object
     * @return
     */
    public static String DecryptString(String object,String T){

        String keyString= Security.md5(T + DKAETYA);

        String key=DKAETYA16(keyString);

        //解密
        String data= Security.decrypt(key, object);

        return data;
    }


    /**
     * 字符串 加密
     * @param time
     * @param mString
     * @return
     */
    public static String encryptionEnhanced(String time,String mString){

        String key= Security.md5(time+DKAETYA);

        String key16=DKAETYA16(key);

        String date= Security.encrypt(key16,mString);

        return date;
    }


//    /**
//     * 用户加密
//     *
//     * @param hashMap
//     * @param methond
//     * @return
//     */
//    public static String USER_NRJM(HashMap<String, String> hashMap, String methond) {
//        hashMap.put("service", methond);
//        List<String> listKey = new ArrayList();
//        Iterator it = hashMap.keySet().iterator();
//        while (it.hasNext()) {
//            String key = it.next().toString();
//            listKey.add(key);
//        }
//        List<String> listSort = Sorting.listSort(listKey);
//        String key = "";
//        StringBuilder sb = new StringBuilder();
//        for (String string : listSort) {
//            String name = hashMap.get(string);
//            key = sb.append(name).toString();
//        }
//        return Security.md5(key +  ConnectionConstants.DJCCUSERKEY);
//    }

}
